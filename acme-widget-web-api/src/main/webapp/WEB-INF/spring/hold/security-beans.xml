<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
  xsi:schemaLocation="
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		">

  <authentication-manager>
    <authentication-provider ref="authenticationProvider" />
  </authentication-manager>

  <!-- <authentication-manager> -->
  <!-- <authentication-provider> -->
  <!-- <user-service> -->
  <!-- <user name="marissa" password="koala" authorities="ROLE_USER" /> -->
  <!-- <user name="paul" password="emu" authorities="ROLE_USER" /> -->
  <!-- </user-service> -->
  <!-- </authentication-provider> -->
  <!-- </authentication-manager> -->

  <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

  <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"
    p:userPropertyToUse="salt" />

  <beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
    p:passwordEncoder-ref="passwordEncoder" p:saltSource-ref="saltSource" p:userDetailsService-ref="accountService" />

  <http pattern="/resources/**" security="none" />
  <http pattern="/login" security="none" />

  <http auto-config="false" use-expressions="true">
    <!-- <intercept-url pattern="/resources/**" filters="none" /> -->
    <intercept-url pattern="/oauth/accessConfirmationForm" access="permitAll" />
    <intercept-url pattern="/home" access="hasRole('ROLE_ANONYMOUS') or hasRole('ROLE_USER')" />
    <!-- <intercept-url pattern="/login" access="hasRole('ROLE_ANONYMOUS') or hasRole('ROLE_USER')" /> -->
    <intercept-url pattern="/accounts/registration/**" access="hasRole('ROLE_ANONYMOUS')" />
    <intercept-url pattern="/accounts/*/activation" access="hasRole('ROLE_ANONYMOUS')" />
    <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
    <!-- <intercept-url pattern="/**" access="permitAll" /> -->

    <form-login login-page="/login" default-target-url="/home" />
    <logout logout-url="/logout" logout-success-url="/login" />
  </http>

  <beans:bean factory-method="getContextHolderStrategy" class="org.springframework.security.core.context.SecurityContextHolder" />


  <!-- oauth2 stuff below here -->

  <!-- <beans:bean class="org.springframework.security.oauth2.provider.verification.DefaultClientAuthenticationCache" /> -->

  <!-- <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.InMemoryOAuth2ProviderTokenServices" 
    /> -->

  <!-- <oauth:provider client-details-service-ref="clientDetails" -->
  <!-- token-services-ref="tokenServices"> -->
  <!-- <oauth:verification-code user-approval-page="/oauth/accessConfirmationForm" /> -->
  <!-- </oauth:provider> -->

  <!-- <oauth:client-details-service id="clientDetails"> -->
  <!-- <oauth:client clientId="acme-widget-client" secret="acme-widget-client-secret" -->
  <!-- authorizedGrantTypes="authorization_code" /> -->
  <!-- </oauth:client-details-service> -->

  <!-- <beans:bean id="tokenServices" class="com.kerz.oauth.service.DefaultOAuth2ProviderTokenServices" -->
  <!-- p:tokenedAuthenticationDao-ref="tokenedAuthenticationDao" /> -->

</beans:beans>